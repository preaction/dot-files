{{
    $license = ref $dist->license;
    if ( $license =~ /^Software::License::(.+)$/ ) {
        $license = $1;
    } else {
        $license = "=$license";
    }

    $authors = join( "\n", map { "author           = $_" } @{$dist->authors} );
    $copyright_year = (localtime)[5] + 1900;
    '';
}}
; --- Project details
name             = {{$dist->name}}
{{$authors}}
license          = {{$license}}
copyright_holder = {{$dist->copyright_holder}}
copyright_year   = {{$copyright_year}}

[Authority]
authority  = cpan:PREACTION
do_munging = 0

[MetaResources]
homepage        = https://github.com/preaction/{{$dist->name}}
repository.web  = https://github.com/preaction/{{$dist->name}}
repository.url  = https://github.com/preaction/{{$dist->name}}.git
bugtracker.web  = https://github.com/preaction/{{$dist->name}}/issues
repository.type = git

; --- Module management
[@Filter]
-bundle = @Basic
; GatherDir must be configured separately
-remove = GatherDir

[ReadmeFromPod]
[ReadmeMarkdownFromPod]
[PodWeaver]
[PkgVersion]
[ModuleBuild]
[CPANFile]
[Git::Contributors]
; authordep Pod::Weaver::Section::Contributors
[Test::ReportPrereqs]
[Test::Compile]

; --- Repository management
[Git::GatherDir]
include_dotfiles = 1
prune_directory = ^eg
; Exclude dotfiles in the root directory
exclude_match = ^\.[^/]+$
; Exclude ini files in the root directory
exclude_match = ^[^/]+\.ini$
; Exclude generated root content, which is included by the various plugins
; Without this, we get an error about duplicate content
exclude_filename = cpanfile
exclude_filename = INSTALL
exclude_filename = LICENSE
exclude_filename = CHANGES
exclude_filename = README
exclude_filename = README.mkdn
exclude_filename = Build.PL
exclude_filename = Makefile.PL

[ChangelogFromGit::CPAN::Changes]
; Create a changelog from the git repository commits
; The changelog will contain the short description of the change
file_name = CHANGES
show_author = 0

[Run::AfterBuild]
; Add travis and coveralls badges to README.mkdn
run = perl -pi -e 's{(# SYNOPSIS)}{# STATUS\n\n<a href="https://travis-ci.org/preaction/{{$dist->name}}"><img src="https://travis-ci.org/preaction/{{$dist->name}}.svg?branch=master"></a><a href="https://coveralls.io/r/preaction/{{$dist->name}}"><img src="https://coveralls.io/repos/preaction/{{$dist->name}}/badge.png" alt="Coverage Status" /></a>\n\n$1}' %d/README.mkdn

[CopyFilesFromBuild]
; Copy generated content to the repository root so users without Dist::Zilla
; can use it
copy = cpanfile
copy = INSTALL
copy = LICENSE
copy = CHANGES
copy = README
copy = README.mkdn
copy = Build.PL
copy = Makefile.PL

; --- Git management
[Git::NextVersion]
[@Git]
; Automatically commit these files during release
changelog = CHANGES
allow_dirty_match = README.*
allow_dirty_match = .*[.]PL
allow_dirty = INSTALL
allow_dirty = LICENSE
allow_dirty = CHANGES
allow_dirty = cpanfile
; Automatically commit with release version and changelog
commit_msg = release v%v%n%n%c
tag_message = %N v%v - %{yyyy-MM-dd}d%n%n%c ; Tag annotations show up in github release list

; --- Project-specific directives

[Prereqs]
perl = 5.008

;-- Common prereqs with minimum version requirements
;Path::Tiny = 0.072 ; Fixes issues with File::Path
;List::Util = 1.29 ; First version with pair* functions
;Getopt::Long = 2.36 ; First version with GetOptionsFromArray
;Import::Base = 0.012 ; Fixed using subs in imports

[Prereqs / TestRequires]
Test::More = 1.001005 ; First version that allows args to subtests
Test::Deep = 0
Test::Differences = 0
Test::Exception = 0
